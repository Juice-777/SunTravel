@model PagedList.IPagedList<SunTravel.Models.Hotel>
@using PagedList.Mvc;

<div class="container">
    @foreach (var item in Model)
    {
        <div class="ListItems container">
            <div class="col-md-6">
                @{
                    if (item.Photo1 != null)
                    {
                        <a href="@Url.Action("Details", "Hotel", new {Id = item.Id})">
                            @Html.Raw("<img style='width:400px; height:300px;' class='ListImg' src=\"data:image/jpeg;base64,"
                             + Convert.ToBase64String(item.Photo1) + "\"")
                        </a>
                    }
                    else
                    {
                        <span>None</span>
                    }
                }
            </div>
            <div class="col-md-6">
                <div class="container">
                    <div class="col-md-10 ListName">
                        @Html.ActionLink(@Html.DisplayTextFor(modelItem => item.Name).ToString(), "Details", new { id = item.Id })
                    </div>

                    <div class="col-md-2 ListStar">
                        @Html.DisplayFor(modelItem => item.Stars) <span class="glyphicon glyphicon-star" aria-hidden="true"></span>
                    </div>
                </div>

                <div class="container ListInfo">
                    <hr id="ListHr">
                    @Html.DisplayFor(modelItem => item.Description)
                </div>
            </div>
        </div>
    }

    <div class="col-md-8 col-md-offset-2">
        @Html.PagedListPager(Model, page => Url.Action("HotelItemsPartial", new { page, @ViewBag.SelectCountry, @ViewBag.SelectStars, @ViewBag.SelectSort  }), 
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "results" }))
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount
    </div>
</div>

